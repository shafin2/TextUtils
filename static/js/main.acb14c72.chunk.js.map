{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggle","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","email","setEmail","heading","onChange","event","target","value","rows","style","backgroundColor","color","role","toUpperCase","modify_setalert","toLowerCase","re","emails","words","split","i","length","test","push","str","toString","replace","textbox","document","getElementById","select","navigator","clipboard","writeText","new_text","join","filter","alert","alert_type","message","App","setmode","setalert","msg","setTimeout","body","Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.acb14c72.chunk.js","sourcesContent":["import React from 'react'\r\n// import{Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\"  to=\"/\">Home</Link>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\"  href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">{props.mode==='dark'?'Enabled dark mode':'Enable dark mode'}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n// Navbar.propTypes={\r\n//   title:PropTypes.string.isRequired,\r\n// }\r\n\r\n// //Default props\r\n\r\n// Navbar.defaultProps ={\r\n//   title:\"Hello world\"\r\n// }","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const [text,setText]=useState(\"Enter text here\")\r\n  const [email,setEmail]=useState(\"No Email in text\")\r\n   \r\n  const uppercase=()=>{\r\n    setText(text.toUpperCase())\r\n    if(text!==\"\"){\r\n      props.modify_setalert(\"Converted to uppercase\",\"success\")\r\n    }\r\n    else{\r\n      props.modify_setalert(\"First enter text\",\"primary\")\r\n    }\r\n  }\r\n  const lowercase=()=>{\r\n    setText(text.toLowerCase())\r\n    if(text!==\"\"){\r\n      props.modify_setalert(\"Converted to lowercase\",\"success\")\r\n    }\r\n    else{\r\n      props.modify_setalert(\"First enter text\",\"primary\")\r\n    }\r\n  }\r\n  const handleOnchange=(event)=>{\r\n    setText(event.target.value)\r\n  }\r\n  function emailExtract(){\r\n    let re=/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/\r\n    let emails=[];\r\n    let words=text.split(\" \")\r\n    for(let i=0;i<words.length;i++){\r\n      let match=re.test(words[i])\r\n      if(match===true){\r\n        emails.push(words[i])\r\n      }\r\n    }\r\n    let str=emails.toString().replace(\",\",\" , \")\r\n    if(str===\"\"){\r\n      setEmail(\"No Email in text\")\r\n      props.modify_setalert(\"No email found\",\"primary\")\r\n    }\r\n    else{\r\n      setEmail(str)\r\n      props.modify_setalert(\"Email extracted\",\"success\")\r\n    }\r\n  }\r\n  const copytext=()=>{\r\n    let textbox =document.getElementById(\"Textbox\")\r\n    if(text!==\"\"){\r\n      textbox.select()\r\n      navigator.clipboard.writeText(textbox.value)\r\n      props.modify_setalert(\"Text copied\",\"success\")\r\n    }\r\n    else{\r\n      props.modify_setalert(\"First enter text\",\"primary\")\r\n    }\r\n  }\r\n  const spaces=()=>{\r\n    let new_text =text.split(/[ ]+/)\r\n    setText(new_text.join(\" \"))\r\n    if(text!==\"\"){\r\n      props.modify_setalert(\"Extra spaces removed\",\"success\")\r\n    }\r\n    else{\r\n      props.modify_setalert(\"First enter text\",\"primary\")\r\n    }\r\n  }\r\n  const cleartext=()=>{\r\n    if(text===\"\"){\r\n      props.modify_setalert(\"There is already no text in textbox\",\"primary\")\r\n    }\r\n    else{\r\n      setText(\"\")\r\n      props.modify_setalert(\"Cleared text\",\"success\")\r\n    }\r\n  }\r\n  // if(props.mode === 'dark'){\r\n  //   setmodeColor(\"light\")\r\n  // }\r\n  // else{\r\n  //   setmodeColor(\"dark\")\r\n  // }\r\n  return (\r\n    <>\r\n        <h1>{props.heading}</h1>\r\n        <div>\r\n          <textarea className=\"form-control\" onChange={handleOnchange} id=\"Textbox\" rows=\"8\" value={text}style={{backgroundColor:props.mode==='dark'?'#212529':'white' , color:props.mode==='dark'?'white':'black'}}></textarea>\r\n          <div className=\"btn-group my-2\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n              {/* <input type=\"radio\" className=\"btn-check mx-10\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" /> */}\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'} `} htmlFor=\"btnradio1\" onClick={uppercase}>Convert to UpperCase</label>\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'} mx-2`} htmlFor=\"btnradio2\" onClick={lowercase}>Convert to LowerCase</label>\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'}`} htmlFor=\"btnradio3\" onClick={emailExtract}>Extract Email</label>\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'} mx-2`} htmlFor=\"btnradio3\" onClick={copytext}>Copy Text</label>\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'}`} htmlFor=\"btnradio3\" onClick={spaces}>Remove extra spaces</label>\r\n              <label className={`btn btn-${props.mode==='dark'?'secondary':'primary'} mx-2`} htmlFor=\"btnradio3\" onClick={cleartext}>Clear Text</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h1>Email in text</h1>\r\n          <p>{email}</p>\r\n          <h1>Text summary</h1>\r\n          <p>{text.length>0?text.split(\" \").filter((a)=>{return a!==''}).length:\"0\"} Words , {text.length - (text.split(' ').length-1)} characters</p>\r\n          <p>{0.008 * (text.length>0?text.split(\" \").filter((a)=>{return a!==''}).length:\"0\")* 60} seconds require to read this text</p>\r\n          <h3>Preview</h3>\r\n          <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nfunction alert(props) {\r\n  return (\r\n    props.alert &&\r\n    <div className={`alert alert-${props.alert.alert_type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.alert_type===\"success\"?\"Success\":\"Alert\"}! </strong>{props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from \"./components/Alert\"\nimport React,{useState} from 'react'\n// import About from \"./components/About\"\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// let a=prompt(\"Enter name\")\nfunction App() { \n  const [mode,setmode] = useState(\"light\")\n  const [alert,setalert]=useState(null)\n  const toggle=()=>{\n    if(mode === \"dark\"){\n      setmode(\"light\")\n      document.body.style.backgroundColor=\"white\"\n      document.body.style.color=\"black\"\n      modify_setalert(\"light mode enabled\",\"success\")\n      document.title=\"Text Utils - Light\"\n    } \n    else{\n      setmode(\"dark\")\n      document.body.style.backgroundColor=\"#2b3036\"\n      document.body.style.color=\"#efefef\"\n      modify_setalert(\"Dark mode enabled\",\"success\")\n      document.title=\"Text Utils - Dark\"\n    }\n  }\n\n  const modify_setalert =(msg,type)=>{\n      setalert({\n        message:msg,\n        alert_type:type\n      })\n      setTimeout(() => {\n        setalert(null)\n      }, 2000);\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtdils\" mode={mode} toggle={toggle}/>\n      <Alert alert={alert}></Alert>\n      <div className=\"container my-3\">\n        <Textform heading=\"Enter the text\" mode={mode} modify_setalert={modify_setalert}/>\n      {/* <Routes>\n        <Route path=\"/\" caseSensitive={false} element={<Textform heading=\"Enter the text\" mode={mode} modify_setalert={modify_setalert}/>} />\n        <Route path=\"/about\" caseSensitive={false} element={<About></About>} />\n      </Routes> */}\n        </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}